

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Jan 15 14:07:38 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Version 2.40
    23                           ; Generated 04/07/2022 GMT
    24                           ; 
    25                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   007C50                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _a
    63   007C50  2484               	dw	9348
    64                           
    65                           	psect	nvCOMRAM
    66   00000C                     __pnvCOMRAM:
    67                           	callstack 0
    68   00000C                     _Thousands:
    69                           	callstack 0
    70   00000C                     	ds	2
    71   00000E                     _Hundred:
    72                           	callstack 0
    73   00000E                     	ds	2
    74   000010                     _Tens:
    75                           	callstack 0
    76   000010                     	ds	2
    77   000012                     _Units:
    78                           	callstack 0
    79   000012                     	ds	2
    80   000000                     _LATB	set	3978
    81   000000                     _LATD	set	3980
    82   000000                     _TRISB	set	3987
    83   000000                     _TRISD	set	3989
    84                           
    85                           ; #config settings
    86                           
    87                           	psect	cinit
    88   007C80                     __pcinit:
    89                           	callstack 0
    90   007C80                     start_initialization:
    91                           	callstack 0
    92   007C80                     __initialization:
    93                           	callstack 0
    94                           
    95                           ; Initialize objects allocated to COMRAM (2 bytes)
    96                           ; load TBLPTR registers with __pidataCOMRAM
    97   007C80  0E50               	movlw	low __pidataCOMRAM
    98   007C82  6EF6               	movwf	tblptrl,c
    99   007C84  0E7C               	movlw	high __pidataCOMRAM
   100   007C86  6EF7               	movwf	tblptrh,c
   101   007C88  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   102   007C8A  6EF8               	movwf	tblptru,c
   103   007C8C  0009               	tblrd		*+	;fetch initializer
   104   007C8E  CFF5 F014          	movff	tablat,__pdataCOMRAM
   105   007C92  0009               	tblrd		*+	;fetch initializer
   106   007C94  CFF5 F015          	movff	tablat,__pdataCOMRAM+1
   107   007C98                     end_of_initialization:
   108                           	callstack 0
   109   007C98                     __end_of__initialization:
   110                           	callstack 0
   111   007C98  0E00               	movlw	low (__Lmediumconst shr (0+16))
   112   007C9A  6EF8               	movwf	tblptru,c
   113   007C9C  0100               	movlb	0
   114   007C9E  EF32  F03E         	goto	_main	;jump to C main() function
   115                           
   116                           	psect	dataCOMRAM
   117   000014                     __pdataCOMRAM:
   118                           	callstack 0
   119   000014                     _a:
   120                           	callstack 0
   121   000014                     	ds	2
   122                           
   123                           	psect	cstackCOMRAM
   124   000001                     __pcstackCOMRAM:
   125                           	callstack 0
   126   000001                     ?___awdiv:
   127                           	callstack 0
   128   000001                     ?___awmod:
   129                           	callstack 0
   130   000001                     Set_Port@value:
   131                           	callstack 0
   132   000001                     Clear_Port@value:
   133                           	callstack 0
   134   000001                     ___awdiv@dividend:
   135                           	callstack 0
   136   000001                     ___awmod@dividend:
   137                           	callstack 0
   138                           
   139                           ; 2 bytes @ 0x0
   140   000001                     	ds	1
   141   000002                     ??_Decode_Display_AC:
   142                           
   143                           ; 1 bytes @ 0x1
   144   000002                     	ds	1
   145   000003                     ___awdiv@divisor:
   146                           	callstack 0
   147   000003                     ___awmod@divisor:
   148                           	callstack 0
   149                           
   150                           ; 2 bytes @ 0x2
   151   000003                     	ds	1
   152   000004                     Decode_Display_AC@value:
   153                           	callstack 0
   154                           
   155                           ; 1 bytes @ 0x3
   156   000004                     	ds	1
   157   000005                     ___awdiv@counter:
   158                           	callstack 0
   159   000005                     ___awmod@counter:
   160                           	callstack 0
   161                           
   162                           ; 1 bytes @ 0x4
   163   000005                     	ds	1
   164   000006                     ___awdiv@sign:
   165                           	callstack 0
   166   000006                     ___awmod@sign:
   167                           	callstack 0
   168                           
   169                           ; 1 bytes @ 0x5
   170   000006                     	ds	1
   171   000007                     ___awdiv@quotient:
   172                           	callstack 0
   173                           
   174                           ; 2 bytes @ 0x6
   175   000007                     	ds	2
   176   000009                     Show_Digits_Display@value:
   177                           	callstack 0
   178                           
   179                           ; 2 bytes @ 0x8
   180   000009                     	ds	2
   181   00000B                     ??_Show_Digits_Display:
   182                           
   183                           ; 1 bytes @ 0xA
   184   00000B                     	ds	1
   185   00000C                     
   186                           ; 1 bytes @ 0xB
   187 ;;
   188 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   189 ;;
   190 ;; *************** function _main *****************
   191 ;; Defined at:
   192 ;;		line 20 in file "ADC_Libreria_7SEG_AC.c"
   193 ;; Parameters:    Size  Location     Type
   194 ;;		None
   195 ;; Auto vars:     Size  Location     Type
   196 ;;		None
   197 ;; Return value:  Size  Location     Type
   198 ;;                  1    wreg      void 
   199 ;; Registers used:
   200 ;;		wreg, status,2, status,0, cstack
   201 ;; Tracked objects:
   202 ;;		On entry : 0/0
   203 ;;		On exit  : 0/0
   204 ;;		Unchanged: 0/0
   205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   206 ;;      Params:         0       0       0       0       0       0       0       0       0
   207 ;;      Locals:         0       0       0       0       0       0       0       0       0
   208 ;;      Temps:          0       0       0       0       0       0       0       0       0
   209 ;;      Totals:         0       0       0       0       0       0       0       0       0
   210 ;;Total ram usage:        0 bytes
   211 ;; Hardware stack levels required when called: 3
   212 ;; This function calls:
   213 ;;		_Show_Digits_Display
   214 ;; This function is called by:
   215 ;;		Startup code after reset
   216 ;; This function uses a non-reentrant model
   217 ;;
   218                           
   219                           	psect	text0
   220   007C64                     __ptext0:
   221                           	callstack 0
   222   007C64                     _main:
   223                           	callstack 28
   224   007C64                     
   225                           ;ADC_Libreria_7SEG_AC.c: 22:     TRISD=0x00;
   226   007C64  0E00               	movlw	0
   227   007C66  6E95               	movwf	149,c	;volatile
   228                           
   229                           ;ADC_Libreria_7SEG_AC.c: 23:     TRISB=0x00;
   230   007C68  0E00               	movlw	0
   231   007C6A  6E93               	movwf	147,c	;volatile
   232   007C6C                     l982:
   233                           
   234                           ;ADC_Libreria_7SEG_AC.c: 26:     {;ADC_Libreria_7SEG_AC.c: 27:          Show_Digits_Disp
      +                          lay(a);
   235   007C6C  0E24               	movlw	36
   236   007C6E  6E0A               	movwf	(Show_Digits_Display@value+1)^0,c
   237   007C70  0E84               	movlw	132
   238   007C72  6E09               	movwf	Show_Digits_Display@value^0,c
   239   007C74  EC7B  F03F         	call	_Show_Digits_Display	;wreg free
   240   007C78  EF36  F03E         	goto	l982
   241   007C7C  EF00  F000         	goto	start
   242   007C80                     __end_of_main:
   243                           	callstack 0
   244                           
   245 ;; *************** function _Show_Digits_Display *****************
   246 ;; Defined at:
   247 ;;		line 38 in file "Libreria_DIsplay_7SEG_AC.c"
   248 ;; Parameters:    Size  Location     Type
   249 ;;  value           2    8[COMRAM] short 
   250 ;; Auto vars:     Size  Location     Type
   251 ;;		None
   252 ;; Return value:  Size  Location     Type
   253 ;;                  1    wreg      void 
   254 ;; Registers used:
   255 ;;		wreg, status,2, status,0, cstack
   256 ;; Tracked objects:
   257 ;;		On entry : 0/0
   258 ;;		On exit  : 0/0
   259 ;;		Unchanged: 0/0
   260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   261 ;;      Params:         2       0       0       0       0       0       0       0       0
   262 ;;      Locals:         0       0       0       0       0       0       0       0       0
   263 ;;      Temps:          1       0       0       0       0       0       0       0       0
   264 ;;      Totals:         3       0       0       0       0       0       0       0       0
   265 ;;Total ram usage:        3 bytes
   266 ;; Hardware stack levels used: 1
   267 ;; Hardware stack levels required when called: 2
   268 ;; This function calls:
   269 ;;		_Decode_Display_AC
   270 ;;		___awdiv
   271 ;;		___awmod
   272 ;; This function is called by:
   273 ;;		_main
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           	psect	text1
   278   007EF6                     __ptext1:
   279                           	callstack 0
   280   007EF6                     _Show_Digits_Display:
   281                           	callstack 28
   282   007EF6                     
   283                           ;Libreria_DIsplay_7SEG_AC.c: 38: void Show_Digits_Display (int16_t value);Libreria_DIspl
      +                          ay_7SEG_AC.c: 39: {;Libreria_DIsplay_7SEG_AC.c: 40:        Thousands = value/1000;
   284   007EF6  C009  F001         	movff	Show_Digits_Display@value,___awdiv@dividend
   285   007EFA  C00A  F002         	movff	Show_Digits_Display@value+1,___awdiv@dividend+1
   286   007EFE  0E03               	movlw	3
   287   007F00  6E04               	movwf	(___awdiv@divisor+1)^0,c
   288   007F02  0EE8               	movlw	232
   289   007F04  6E03               	movwf	___awdiv@divisor^0,c
   290   007F06  ECA9  F03E         	call	___awdiv	;wreg free
   291   007F0A  C001  F00C         	movff	?___awdiv,_Thousands
   292   007F0E  C002  F00D         	movff	?___awdiv+1,_Thousands+1
   293                           
   294                           ;Libreria_DIsplay_7SEG_AC.c: 41:        value = value%1000;
   295   007F12  C009  F001         	movff	Show_Digits_Display@value,___awmod@dividend
   296   007F16  C00A  F002         	movff	Show_Digits_Display@value+1,___awmod@dividend+1
   297   007F1A  0E03               	movlw	3
   298   007F1C  6E04               	movwf	(___awmod@divisor+1)^0,c
   299   007F1E  0EE8               	movlw	232
   300   007F20  6E03               	movwf	___awmod@divisor^0,c
   301   007F22  EC51  F03E         	call	___awmod	;wreg free
   302   007F26  C001  F009         	movff	?___awmod,Show_Digits_Display@value
   303   007F2A  C002  F00A         	movff	?___awmod+1,Show_Digits_Display@value+1
   304                           
   305                           ;Libreria_DIsplay_7SEG_AC.c: 42:        Hundred = value/100;
   306   007F2E  C009  F001         	movff	Show_Digits_Display@value,___awdiv@dividend
   307   007F32  C00A  F002         	movff	Show_Digits_Display@value+1,___awdiv@dividend+1
   308   007F36  0E00               	movlw	0
   309   007F38  6E04               	movwf	(___awdiv@divisor+1)^0,c
   310   007F3A  0E64               	movlw	100
   311   007F3C  6E03               	movwf	___awdiv@divisor^0,c
   312   007F3E  ECA9  F03E         	call	___awdiv	;wreg free
   313   007F42  C001  F00E         	movff	?___awdiv,_Hundred
   314   007F46  C002  F00F         	movff	?___awdiv+1,_Hundred+1
   315                           
   316                           ;Libreria_DIsplay_7SEG_AC.c: 43:        value = value%100;
   317   007F4A  C009  F001         	movff	Show_Digits_Display@value,___awmod@dividend
   318   007F4E  C00A  F002         	movff	Show_Digits_Display@value+1,___awmod@dividend+1
   319   007F52  0E00               	movlw	0
   320   007F54  6E04               	movwf	(___awmod@divisor+1)^0,c
   321   007F56  0E64               	movlw	100
   322   007F58  6E03               	movwf	___awmod@divisor^0,c
   323   007F5A  EC51  F03E         	call	___awmod	;wreg free
   324   007F5E  C001  F009         	movff	?___awmod,Show_Digits_Display@value
   325   007F62  C002  F00A         	movff	?___awmod+1,Show_Digits_Display@value+1
   326                           
   327                           ;Libreria_DIsplay_7SEG_AC.c: 44:        Tens = value/10;
   328   007F66  C009  F001         	movff	Show_Digits_Display@value,___awdiv@dividend
   329   007F6A  C00A  F002         	movff	Show_Digits_Display@value+1,___awdiv@dividend+1
   330   007F6E  0E00               	movlw	0
   331   007F70  6E04               	movwf	(___awdiv@divisor+1)^0,c
   332   007F72  0E0A               	movlw	10
   333   007F74  6E03               	movwf	___awdiv@divisor^0,c
   334   007F76  ECA9  F03E         	call	___awdiv	;wreg free
   335   007F7A  C001  F010         	movff	?___awdiv,_Tens
   336   007F7E  C002  F011         	movff	?___awdiv+1,_Tens+1
   337                           
   338                           ;Libreria_DIsplay_7SEG_AC.c: 45:        Units = value%10;
   339   007F82  C009  F001         	movff	Show_Digits_Display@value,___awmod@dividend
   340   007F86  C00A  F002         	movff	Show_Digits_Display@value+1,___awmod@dividend+1
   341   007F8A  0E00               	movlw	0
   342   007F8C  6E04               	movwf	(___awmod@divisor+1)^0,c
   343   007F8E  0E0A               	movlw	10
   344   007F90  6E03               	movwf	___awmod@divisor^0,c
   345   007F92  EC51  F03E         	call	___awmod	;wreg free
   346   007F96  C001  F012         	movff	?___awmod,_Units
   347   007F9A  C002  F013         	movff	?___awmod+1,_Units+1
   348                           
   349                           ;Libreria_DIsplay_7SEG_AC.c: 47:        Decode_Display_AC(Units);
   350   007F9E  5012               	movf	_Units^0,w,c
   351   007FA0  EC0B  F03F         	call	_Decode_Display_AC
   352   007FA4                     
   353                           ;Libreria_DIsplay_7SEG_AC.c: 48:        LATB=(1<<3);
   354   007FA4  0E08               	movlw	8
   355   007FA6  6E8A               	movwf	138,c	;volatile
   356   007FA8                     
   357                           ;Libreria_DIsplay_7SEG_AC.c: 49:        _delay((unsigned long)((10)*(1000000/4000.0)));
   358   007FA8  0E04               	movlw	4
   359   007FAA  6E0B               	movwf	??_Show_Digits_Display^0,c
   360   007FAC  0E3E               	movlw	62
   361   007FAE                     u257:
   362   007FAE  2EE8               	decfsz	wreg,f,c
   363   007FB0  D7FE               	bra	u257
   364   007FB2  2E0B               	decfsz	??_Show_Digits_Display^0,f,c
   365   007FB4  D7FC               	bra	u257
   366   007FB6                     
   367                           ;Libreria_DIsplay_7SEG_AC.c: 50:        Decode_Display_AC(Tens);
   368   007FB6  5010               	movf	_Tens^0,w,c
   369   007FB8  EC0B  F03F         	call	_Decode_Display_AC
   370   007FBC                     
   371                           ;Libreria_DIsplay_7SEG_AC.c: 51:        LATB=(1<<2);
   372   007FBC  0E04               	movlw	4
   373   007FBE  6E8A               	movwf	138,c	;volatile
   374                           
   375                           ;Libreria_DIsplay_7SEG_AC.c: 52:        _delay((unsigned long)((10)*(1000000/4000.0)));
   376   007FC0  0E04               	movlw	4
   377   007FC2  6E0B               	movwf	??_Show_Digits_Display^0,c
   378   007FC4  0E3E               	movlw	62
   379   007FC6                     u267:
   380   007FC6  2EE8               	decfsz	wreg,f,c
   381   007FC8  D7FE               	bra	u267
   382   007FCA  2E0B               	decfsz	??_Show_Digits_Display^0,f,c
   383   007FCC  D7FC               	bra	u267
   384   007FCE                     
   385                           ;Libreria_DIsplay_7SEG_AC.c: 53:        Decode_Display_AC(Hundred);
   386   007FCE  500E               	movf	_Hundred^0,w,c
   387   007FD0  EC0B  F03F         	call	_Decode_Display_AC
   388   007FD4                     
   389                           ;Libreria_DIsplay_7SEG_AC.c: 54:        LATB=(1<<1);
   390   007FD4  0E02               	movlw	2
   391   007FD6  6E8A               	movwf	138,c	;volatile
   392   007FD8                     
   393                           ;Libreria_DIsplay_7SEG_AC.c: 55:        _delay((unsigned long)((10)*(1000000/4000.0)));
   394   007FD8  0E04               	movlw	4
   395   007FDA  6E0B               	movwf	??_Show_Digits_Display^0,c
   396   007FDC  0E3E               	movlw	62
   397   007FDE                     u277:
   398   007FDE  2EE8               	decfsz	wreg,f,c
   399   007FE0  D7FE               	bra	u277
   400   007FE2  2E0B               	decfsz	??_Show_Digits_Display^0,f,c
   401   007FE4  D7FC               	bra	u277
   402   007FE6                     
   403                           ;Libreria_DIsplay_7SEG_AC.c: 56:        Decode_Display_AC(Thousands);
   404   007FE6  500C               	movf	_Thousands^0,w,c
   405   007FE8  EC0B  F03F         	call	_Decode_Display_AC
   406                           
   407                           ;Libreria_DIsplay_7SEG_AC.c: 57:        LATB=(1<<0);
   408   007FEC  0E01               	movlw	1
   409   007FEE  6E8A               	movwf	138,c	;volatile
   410   007FF0                     
   411                           ;Libreria_DIsplay_7SEG_AC.c: 58:        _delay((unsigned long)((10)*(1000000/4000.0)));
   412   007FF0  0E04               	movlw	4
   413   007FF2  6E0B               	movwf	??_Show_Digits_Display^0,c
   414   007FF4  0E3E               	movlw	62
   415   007FF6                     u287:
   416   007FF6  2EE8               	decfsz	wreg,f,c
   417   007FF8  D7FE               	bra	u287
   418   007FFA  2E0B               	decfsz	??_Show_Digits_Display^0,f,c
   419   007FFC  D7FC               	bra	u287
   420   007FFE  0012               	return		;funcret
   421   008000                     __end_of_Show_Digits_Display:
   422                           	callstack 0
   423                           
   424 ;; *************** function ___awmod *****************
   425 ;; Defined at:
   426 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;  dividend        2    0[COMRAM] int 
   429 ;;  divisor         2    2[COMRAM] int 
   430 ;; Auto vars:     Size  Location     Type
   431 ;;  sign            1    5[COMRAM] unsigned char 
   432 ;;  counter         1    4[COMRAM] unsigned char 
   433 ;; Return value:  Size  Location     Type
   434 ;;                  2    0[COMRAM] int 
   435 ;; Registers used:
   436 ;;		wreg, status,2, status,0
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   442 ;;      Params:         4       0       0       0       0       0       0       0       0
   443 ;;      Locals:         2       0       0       0       0       0       0       0       0
   444 ;;      Temps:          0       0       0       0       0       0       0       0       0
   445 ;;      Totals:         6       0       0       0       0       0       0       0       0
   446 ;;Total ram usage:        6 bytes
   447 ;; Hardware stack levels used: 1
   448 ;; This function calls:
   449 ;;		Nothing
   450 ;; This function is called by:
   451 ;;		_Show_Digits_Display
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           	psect	text2
   456   007CA2                     __ptext2:
   457                           	callstack 0
   458   007CA2                     ___awmod:
   459                           	callstack 29
   460   007CA2  0E00               	movlw	0
   461   007CA4  6E06               	movwf	___awmod@sign^0,c
   462   007CA6  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   463   007CA8  EF5A  F03E         	goto	u190
   464   007CAC  EF58  F03E         	goto	u191
   465   007CB0                     u191:
   466   007CB0  EF60  F03E         	goto	l932
   467   007CB4                     u190:
   468   007CB4  6C01               	negf	___awmod@dividend^0,c
   469   007CB6  1E02               	comf	(___awmod@dividend+1)^0,f,c
   470   007CB8  B0D8               	btfsc	status,0,c
   471   007CBA  2A02               	incf	(___awmod@dividend+1)^0,f,c
   472   007CBC  0E01               	movlw	1
   473   007CBE  6E06               	movwf	___awmod@sign^0,c
   474   007CC0                     l932:
   475   007CC0  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   476   007CC2  EF67  F03E         	goto	u200
   477   007CC6  EF65  F03E         	goto	u201
   478   007CCA                     u201:
   479   007CCA  EF6B  F03E         	goto	l936
   480   007CCE                     u200:
   481   007CCE  6C03               	negf	___awmod@divisor^0,c
   482   007CD0  1E04               	comf	(___awmod@divisor+1)^0,f,c
   483   007CD2  B0D8               	btfsc	status,0,c
   484   007CD4  2A04               	incf	(___awmod@divisor+1)^0,f,c
   485   007CD6                     l936:
   486   007CD6  5003               	movf	___awmod@divisor^0,w,c
   487   007CD8  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   488   007CDA  B4D8               	btfsc	status,2,c
   489   007CDC  EF72  F03E         	goto	u211
   490   007CE0  EF74  F03E         	goto	u210
   491   007CE4                     u211:
   492   007CE4  EF98  F03E         	goto	l952
   493   007CE8                     u210:
   494   007CE8  0E01               	movlw	1
   495   007CEA  6E05               	movwf	___awmod@counter^0,c
   496   007CEC  EF7C  F03E         	goto	l942
   497   007CF0                     l940:
   498   007CF0  90D8               	bcf	status,0,c
   499   007CF2  3603               	rlcf	___awmod@divisor^0,f,c
   500   007CF4  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   501   007CF6  2A05               	incf	___awmod@counter^0,f,c
   502   007CF8                     l942:
   503   007CF8  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   504   007CFA  EF81  F03E         	goto	u221
   505   007CFE  EF83  F03E         	goto	u220
   506   007D02                     u221:
   507   007D02  EF78  F03E         	goto	l940
   508   007D06                     u220:
   509   007D06                     l944:
   510   007D06  5003               	movf	___awmod@divisor^0,w,c
   511   007D08  5C01               	subwf	___awmod@dividend^0,w,c
   512   007D0A  5004               	movf	(___awmod@divisor+1)^0,w,c
   513   007D0C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   514   007D0E  A0D8               	btfss	status,0,c
   515   007D10  EF8C  F03E         	goto	u231
   516   007D14  EF8E  F03E         	goto	u230
   517   007D18                     u231:
   518   007D18  EF92  F03E         	goto	l948
   519   007D1C                     u230:
   520   007D1C  5003               	movf	___awmod@divisor^0,w,c
   521   007D1E  5E01               	subwf	___awmod@dividend^0,f,c
   522   007D20  5004               	movf	(___awmod@divisor+1)^0,w,c
   523   007D22  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   524   007D24                     l948:
   525   007D24  90D8               	bcf	status,0,c
   526   007D26  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   527   007D28  3203               	rrcf	___awmod@divisor^0,f,c
   528   007D2A  2E05               	decfsz	___awmod@counter^0,f,c
   529   007D2C  EF83  F03E         	goto	l944
   530   007D30                     l952:
   531   007D30  5006               	movf	___awmod@sign^0,w,c
   532   007D32  B4D8               	btfsc	status,2,c
   533   007D34  EF9E  F03E         	goto	u241
   534   007D38  EFA0  F03E         	goto	u240
   535   007D3C                     u241:
   536   007D3C  EFA4  F03E         	goto	l956
   537   007D40                     u240:
   538   007D40  6C01               	negf	___awmod@dividend^0,c
   539   007D42  1E02               	comf	(___awmod@dividend+1)^0,f,c
   540   007D44  B0D8               	btfsc	status,0,c
   541   007D46  2A02               	incf	(___awmod@dividend+1)^0,f,c
   542   007D48                     l956:
   543   007D48  C001  F001         	movff	___awmod@dividend,?___awmod
   544   007D4C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   545   007D50  0012               	return		;funcret
   546   007D52                     __end_of___awmod:
   547                           	callstack 0
   548                           
   549 ;; *************** function ___awdiv *****************
   550 ;; Defined at:
   551 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;  dividend        2    0[COMRAM] int 
   554 ;;  divisor         2    2[COMRAM] int 
   555 ;; Auto vars:     Size  Location     Type
   556 ;;  quotient        2    6[COMRAM] int 
   557 ;;  sign            1    5[COMRAM] unsigned char 
   558 ;;  counter         1    4[COMRAM] unsigned char 
   559 ;; Return value:  Size  Location     Type
   560 ;;                  2    0[COMRAM] int 
   561 ;; Registers used:
   562 ;;		wreg, status,2, status,0
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   568 ;;      Params:         4       0       0       0       0       0       0       0       0
   569 ;;      Locals:         4       0       0       0       0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0       0       0       0       0
   571 ;;      Totals:         8       0       0       0       0       0       0       0       0
   572 ;;Total ram usage:        8 bytes
   573 ;; Hardware stack levels used: 1
   574 ;; This function calls:
   575 ;;		Nothing
   576 ;; This function is called by:
   577 ;;		_Show_Digits_Display
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           	psect	text3
   582   007D52                     __ptext3:
   583                           	callstack 0
   584   007D52                     ___awdiv:
   585                           	callstack 29
   586   007D52  0E00               	movlw	0
   587   007D54  6E06               	movwf	___awdiv@sign^0,c
   588   007D56  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   589   007D58  EFB2  F03E         	goto	u130
   590   007D5C  EFB0  F03E         	goto	u131
   591   007D60                     u131:
   592   007D60  EFB8  F03E         	goto	l888
   593   007D64                     u130:
   594   007D64  6C03               	negf	___awdiv@divisor^0,c
   595   007D66  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   596   007D68  B0D8               	btfsc	status,0,c
   597   007D6A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   598   007D6C  0E01               	movlw	1
   599   007D6E  6E06               	movwf	___awdiv@sign^0,c
   600   007D70                     l888:
   601   007D70  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   602   007D72  EFBF  F03E         	goto	u140
   603   007D76  EFBD  F03E         	goto	u141
   604   007D7A                     u141:
   605   007D7A  EFC5  F03E         	goto	l894
   606   007D7E                     u140:
   607   007D7E  6C01               	negf	___awdiv@dividend^0,c
   608   007D80  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   609   007D82  B0D8               	btfsc	status,0,c
   610   007D84  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   611   007D86  0E01               	movlw	1
   612   007D88  1A06               	xorwf	___awdiv@sign^0,f,c
   613   007D8A                     l894:
   614   007D8A  0E00               	movlw	0
   615   007D8C  6E08               	movwf	(___awdiv@quotient+1)^0,c
   616   007D8E  0E00               	movlw	0
   617   007D90  6E07               	movwf	___awdiv@quotient^0,c
   618   007D92  5003               	movf	___awdiv@divisor^0,w,c
   619   007D94  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   620   007D96  B4D8               	btfsc	status,2,c
   621   007D98  EFD0  F03E         	goto	u151
   622   007D9C  EFD2  F03E         	goto	u150
   623   007DA0                     u151:
   624   007DA0  EFFA  F03E         	goto	l916
   625   007DA4                     u150:
   626   007DA4  0E01               	movlw	1
   627   007DA6  6E05               	movwf	___awdiv@counter^0,c
   628   007DA8  EFDA  F03E         	goto	l902
   629   007DAC                     l900:
   630   007DAC  90D8               	bcf	status,0,c
   631   007DAE  3603               	rlcf	___awdiv@divisor^0,f,c
   632   007DB0  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   633   007DB2  2A05               	incf	___awdiv@counter^0,f,c
   634   007DB4                     l902:
   635   007DB4  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   636   007DB6  EFDF  F03E         	goto	u161
   637   007DBA  EFE1  F03E         	goto	u160
   638   007DBE                     u161:
   639   007DBE  EFD6  F03E         	goto	l900
   640   007DC2                     u160:
   641   007DC2                     l904:
   642   007DC2  90D8               	bcf	status,0,c
   643   007DC4  3607               	rlcf	___awdiv@quotient^0,f,c
   644   007DC6  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   645   007DC8  5003               	movf	___awdiv@divisor^0,w,c
   646   007DCA  5C01               	subwf	___awdiv@dividend^0,w,c
   647   007DCC  5004               	movf	(___awdiv@divisor+1)^0,w,c
   648   007DCE  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   649   007DD0  A0D8               	btfss	status,0,c
   650   007DD2  EFED  F03E         	goto	u171
   651   007DD6  EFEF  F03E         	goto	u170
   652   007DDA                     u171:
   653   007DDA  EFF4  F03E         	goto	l912
   654   007DDE                     u170:
   655   007DDE  5003               	movf	___awdiv@divisor^0,w,c
   656   007DE0  5E01               	subwf	___awdiv@dividend^0,f,c
   657   007DE2  5004               	movf	(___awdiv@divisor+1)^0,w,c
   658   007DE4  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   659   007DE6  8007               	bsf	___awdiv@quotient^0,0,c
   660   007DE8                     l912:
   661   007DE8  90D8               	bcf	status,0,c
   662   007DEA  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   663   007DEC  3203               	rrcf	___awdiv@divisor^0,f,c
   664   007DEE  2E05               	decfsz	___awdiv@counter^0,f,c
   665   007DF0  EFE1  F03E         	goto	l904
   666   007DF4                     l916:
   667   007DF4  5006               	movf	___awdiv@sign^0,w,c
   668   007DF6  B4D8               	btfsc	status,2,c
   669   007DF8  EF00  F03F         	goto	u181
   670   007DFC  EF02  F03F         	goto	u180
   671   007E00                     u181:
   672   007E00  EF06  F03F         	goto	l920
   673   007E04                     u180:
   674   007E04  6C07               	negf	___awdiv@quotient^0,c
   675   007E06  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   676   007E08  B0D8               	btfsc	status,0,c
   677   007E0A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   678   007E0C                     l920:
   679   007E0C  C007  F001         	movff	___awdiv@quotient,?___awdiv
   680   007E10  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   681   007E14  0012               	return		;funcret
   682   007E16                     __end_of___awdiv:
   683                           	callstack 0
   684                           
   685 ;; *************** function _Decode_Display_AC *****************
   686 ;; Defined at:
   687 ;;		line 19 in file "Libreria_DIsplay_7SEG_AC.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;  value           1    wreg     char 
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  value           1    3[COMRAM] char 
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, status,2, status,0, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   701 ;;      Params:         0       0       0       0       0       0       0       0       0
   702 ;;      Locals:         1       0       0       0       0       0       0       0       0
   703 ;;      Temps:          2       0       0       0       0       0       0       0       0
   704 ;;      Totals:         3       0       0       0       0       0       0       0       0
   705 ;;Total ram usage:        3 bytes
   706 ;; Hardware stack levels used: 1
   707 ;; Hardware stack levels required when called: 1
   708 ;; This function calls:
   709 ;;		_Clear_Port
   710 ;;		_Set_Port
   711 ;; This function is called by:
   712 ;;		_Show_Digits_Display
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           	psect	text4
   717   007E16                     __ptext4:
   718                           	callstack 0
   719   007E16                     _Decode_Display_AC:
   720                           	callstack 28
   721                           
   722                           ;incstack = 0
   723                           ;Decode_Display_AC@value stored from wreg
   724   007E16  6E04               	movwf	Decode_Display_AC@value^0,c
   725   007E18                     
   726                           ;Libreria_DIsplay_7SEG_AC.c: 19: void Decode_Display_AC (int8_t value);Libreria_DIsplay_
      +                          7SEG_AC.c: 20: {;Libreria_DIsplay_7SEG_AC.c: 21:     Set_Port((1<<0)|(1<<1)|(1<<2)|(1<<3
      +                          )|(1<<4)|(1<<5)|(1<<6)|(1<<7));
   727   007E18  0EFF               	movlw	255
   728   007E1A  EC29  F03E         	call	_Set_Port
   729                           
   730                           ;Libreria_DIsplay_7SEG_AC.c: 22:     switch(value)
   731   007E1E  EF43  F03F         	goto	l766
   732   007E22                     l744:
   733   007E22  0E3F               	movlw	63
   734   007E24  EC2D  F03E         	call	_Clear_Port
   735   007E28  EF7A  F03F         	goto	l59
   736   007E2C                     l746:
   737   007E2C  0E06               	movlw	6
   738   007E2E  EC2D  F03E         	call	_Clear_Port
   739   007E32  EF7A  F03F         	goto	l59
   740   007E36                     l748:
   741   007E36  0E5B               	movlw	91
   742   007E38  EC2D  F03E         	call	_Clear_Port
   743   007E3C  EF7A  F03F         	goto	l59
   744   007E40                     l750:
   745   007E40  0E4F               	movlw	79
   746   007E42  EC2D  F03E         	call	_Clear_Port
   747   007E46  EF7A  F03F         	goto	l59
   748   007E4A                     l752:
   749   007E4A  0E66               	movlw	102
   750   007E4C  EC2D  F03E         	call	_Clear_Port
   751   007E50  EF7A  F03F         	goto	l59
   752   007E54                     l754:
   753   007E54  0E6D               	movlw	109
   754   007E56  EC2D  F03E         	call	_Clear_Port
   755   007E5A  EF7A  F03F         	goto	l59
   756   007E5E                     l756:
   757   007E5E  0E7D               	movlw	125
   758   007E60  EC2D  F03E         	call	_Clear_Port
   759   007E64  EF7A  F03F         	goto	l59
   760   007E68                     l758:
   761   007E68  0E07               	movlw	7
   762   007E6A  EC2D  F03E         	call	_Clear_Port
   763   007E6E  EF7A  F03F         	goto	l59
   764   007E72                     l760:
   765   007E72  0E7F               	movlw	127
   766   007E74  EC2D  F03E         	call	_Clear_Port
   767   007E78  EF7A  F03F         	goto	l59
   768   007E7C                     l762:
   769   007E7C  0E67               	movlw	103
   770   007E7E  EC2D  F03E         	call	_Clear_Port
   771   007E82  EF7A  F03F         	goto	l59
   772   007E86                     l766:
   773   007E86  C004  F002         	movff	Decode_Display_AC@value,??_Decode_Display_AC
   774   007E8A  6A03               	clrf	(??_Decode_Display_AC+1)^0,c
   775   007E8C  BE02               	btfsc	??_Decode_Display_AC^0,7,c
   776   007E8E  0603               	decf	(??_Decode_Display_AC+1)^0,f,c
   777                           
   778                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   779                           ; Switch size 1, requested type "simple"
   780                           ; Number of cases is 1, Range of values is 0 to 0
   781                           ; switch strategies available:
   782                           ; Name         Instructions Cycles
   783                           ; simple_byte            4     3 (average)
   784                           ;	Chosen strategy is simple_byte
   785   007E90  5003               	movf	(??_Decode_Display_AC+1)^0,w,c
   786   007E92  0A00               	xorlw	0	; case 0
   787   007E94  B4D8               	btfsc	status,2,c
   788   007E96  EF4F  F03F         	goto	l988
   789   007E9A  EF7A  F03F         	goto	l59
   790   007E9E                     l988:
   791                           
   792                           ; Switch size 1, requested type "simple"
   793                           ; Number of cases is 10, Range of values is 0 to 9
   794                           ; switch strategies available:
   795                           ; Name         Instructions Cycles
   796                           ; simple_byte           31    16 (average)
   797                           ;	Chosen strategy is simple_byte
   798   007E9E  5002               	movf	??_Decode_Display_AC^0,w,c
   799   007EA0  0A00               	xorlw	0	; case 0
   800   007EA2  B4D8               	btfsc	status,2,c
   801   007EA4  EF11  F03F         	goto	l744
   802   007EA8  0A01               	xorlw	1	; case 1
   803   007EAA  B4D8               	btfsc	status,2,c
   804   007EAC  EF16  F03F         	goto	l746
   805   007EB0  0A03               	xorlw	3	; case 2
   806   007EB2  B4D8               	btfsc	status,2,c
   807   007EB4  EF1B  F03F         	goto	l748
   808   007EB8  0A01               	xorlw	1	; case 3
   809   007EBA  B4D8               	btfsc	status,2,c
   810   007EBC  EF20  F03F         	goto	l750
   811   007EC0  0A07               	xorlw	7	; case 4
   812   007EC2  B4D8               	btfsc	status,2,c
   813   007EC4  EF25  F03F         	goto	l752
   814   007EC8  0A01               	xorlw	1	; case 5
   815   007ECA  B4D8               	btfsc	status,2,c
   816   007ECC  EF2A  F03F         	goto	l754
   817   007ED0  0A03               	xorlw	3	; case 6
   818   007ED2  B4D8               	btfsc	status,2,c
   819   007ED4  EF2F  F03F         	goto	l756
   820   007ED8  0A01               	xorlw	1	; case 7
   821   007EDA  B4D8               	btfsc	status,2,c
   822   007EDC  EF34  F03F         	goto	l758
   823   007EE0  0A0F               	xorlw	15	; case 8
   824   007EE2  B4D8               	btfsc	status,2,c
   825   007EE4  EF39  F03F         	goto	l760
   826   007EE8  0A01               	xorlw	1	; case 9
   827   007EEA  B4D8               	btfsc	status,2,c
   828   007EEC  EF3E  F03F         	goto	l762
   829   007EF0  EF7A  F03F         	goto	l59
   830   007EF4                     l59:
   831   007EF4  0012               	return		;funcret
   832   007EF6                     __end_of_Decode_Display_AC:
   833                           	callstack 0
   834                           
   835 ;; *************** function _Set_Port *****************
   836 ;; Defined at:
   837 ;;		line 7 in file "Libreria_DIsplay_7SEG_AC.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  value           1    wreg     char 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;  value           1    0[COMRAM] char 
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, status,2, status,0
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   851 ;;      Params:         0       0       0       0       0       0       0       0       0
   852 ;;      Locals:         1       0       0       0       0       0       0       0       0
   853 ;;      Temps:          0       0       0       0       0       0       0       0       0
   854 ;;      Totals:         1       0       0       0       0       0       0       0       0
   855 ;;Total ram usage:        1 bytes
   856 ;; Hardware stack levels used: 1
   857 ;; This function calls:
   858 ;;		Nothing
   859 ;; This function is called by:
   860 ;;		_Decode_Display_AC
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           	psect	text5
   865   007C52                     __ptext5:
   866                           	callstack 0
   867   007C52                     _Set_Port:
   868                           	callstack 28
   869                           
   870                           ;incstack = 0
   871                           ;Set_Port@value stored from wreg
   872   007C52  6E01               	movwf	Set_Port@value^0,c
   873   007C54                     
   874                           ;Libreria_DIsplay_7SEG_AC.c: 7: void Set_Port (int8_t value);Libreria_DIsplay_7SEG_AC.c:
      +                           8: {;Libreria_DIsplay_7SEG_AC.c: 9:     LATD|=value;
   875   007C54  5001               	movf	Set_Port@value^0,w,c	;volatile
   876   007C56  128C               	iorwf	140,f,c	;volatile
   877   007C58  0012               	return		;funcret
   878   007C5A                     __end_of_Set_Port:
   879                           	callstack 0
   880                           
   881 ;; *************** function _Clear_Port *****************
   882 ;; Defined at:
   883 ;;		line 13 in file "Libreria_DIsplay_7SEG_AC.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  value           1    wreg     char 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  value           1    0[COMRAM] char 
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, status,2, status,0
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   897 ;;      Params:         0       0       0       0       0       0       0       0       0
   898 ;;      Locals:         1       0       0       0       0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0       0       0       0       0
   900 ;;      Totals:         1       0       0       0       0       0       0       0       0
   901 ;;Total ram usage:        1 bytes
   902 ;; Hardware stack levels used: 1
   903 ;; This function calls:
   904 ;;		Nothing
   905 ;; This function is called by:
   906 ;;		_Decode_Display_AC
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text6
   911   007C5A                     __ptext6:
   912                           	callstack 0
   913   007C5A                     _Clear_Port:
   914                           	callstack 28
   915                           
   916                           ;incstack = 0
   917                           ;Clear_Port@value stored from wreg
   918   007C5A  6E01               	movwf	Clear_Port@value^0,c
   919   007C5C                     
   920                           ;Libreria_DIsplay_7SEG_AC.c: 13: void Clear_Port (int8_t value);Libreria_DIsplay_7SEG_AC
      +                          .c: 14: {;Libreria_DIsplay_7SEG_AC.c: 15:     LATD&=~(value);
   921   007C5C  5001               	movf	Clear_Port@value^0,w,c	;volatile
   922   007C5E  0AFF               	xorlw	255
   923   007C60  168C               	andwf	140,f,c	;volatile
   924   007C62  0012               	return		;funcret
   925   007C64                     __end_of_Clear_Port:
   926                           	callstack 0
   927   000000                     
   928                           	psect	rparam
   929   000000                     
   930                           	psect	idloc
   931                           
   932                           ;Config register IDLOC0 @ 0x200000
   933                           ;	unspecified, using default values
   934   200000                     	org	2097152
   935   200000  FF                 	db	255
   936                           
   937                           ;Config register IDLOC1 @ 0x200001
   938                           ;	unspecified, using default values
   939   200001                     	org	2097153
   940   200001  FF                 	db	255
   941                           
   942                           ;Config register IDLOC2 @ 0x200002
   943                           ;	unspecified, using default values
   944   200002                     	org	2097154
   945   200002  FF                 	db	255
   946                           
   947                           ;Config register IDLOC3 @ 0x200003
   948                           ;	unspecified, using default values
   949   200003                     	org	2097155
   950   200003  FF                 	db	255
   951                           
   952                           ;Config register IDLOC4 @ 0x200004
   953                           ;	unspecified, using default values
   954   200004                     	org	2097156
   955   200004  FF                 	db	255
   956                           
   957                           ;Config register IDLOC5 @ 0x200005
   958                           ;	unspecified, using default values
   959   200005                     	org	2097157
   960   200005  FF                 	db	255
   961                           
   962                           ;Config register IDLOC6 @ 0x200006
   963                           ;	unspecified, using default values
   964   200006                     	org	2097158
   965   200006  FF                 	db	255
   966                           
   967                           ;Config register IDLOC7 @ 0x200007
   968                           ;	unspecified, using default values
   969   200007                     	org	2097159
   970   200007  FF                 	db	255
   971                           
   972                           	psect	config
   973                           
   974                           ;Config register CONFIG1L @ 0x300000
   975                           ;	PLL Prescaler Selection bits
   976                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   977                           ;	System Clock Postscaler Selection bits
   978                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   979                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   980                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   981   300000                     	org	3145728
   982   300000  00                 	db	0
   983                           
   984                           ;Config register CONFIG1H @ 0x300001
   985                           ;	Oscillator Selection bits
   986                           ;	FOSC = HS, HS oscillator (HS)
   987                           ;	Fail-Safe Clock Monitor Enable bit
   988                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   989                           ;	Internal/External Oscillator Switchover bit
   990                           ;	IESO = OFF, Oscillator Switchover mode disabled
   991   300001                     	org	3145729
   992   300001  0C                 	db	12
   993                           
   994                           ;Config register CONFIG2L @ 0x300002
   995                           ;	Power-up Timer Enable bit
   996                           ;	PWRT = OFF, PWRT disabled
   997                           ;	Brown-out Reset Enable bits
   998                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   999                           ;	Brown-out Reset Voltage bits
  1000                           ;	BORV = 3, Minimum setting 2.05V
  1001                           ;	USB Voltage Regulator Enable bit
  1002                           ;	VREGEN = OFF, USB voltage regulator disabled
  1003   300002                     	org	3145730
  1004   300002  1F                 	db	31
  1005                           
  1006                           ;Config register CONFIG2H @ 0x300003
  1007                           ;	Watchdog Timer Enable bit
  1008                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1009                           ;	Watchdog Timer Postscale Select bits
  1010                           ;	WDTPS = 32768, 1:32768
  1011   300003                     	org	3145731
  1012   300003  1E                 	db	30
  1013                           
  1014                           ; Padding undefined space
  1015   300004                     	org	3145732
  1016   300004  FF                 	db	255
  1017                           
  1018                           ;Config register CONFIG3H @ 0x300005
  1019                           ;	CCP2 MUX bit
  1020                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1021                           ;	PORTB A/D Enable bit
  1022                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1023                           ;	Low-Power Timer 1 Oscillator Enable bit
  1024                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1025                           ;	MCLR Pin Enable bit
  1026                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1027   300005                     	org	3145733
  1028   300005  83                 	db	131
  1029                           
  1030                           ;Config register CONFIG4L @ 0x300006
  1031                           ;	Stack Full/Underflow Reset Enable bit
  1032                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1033                           ;	Single-Supply ICSP Enable bit
  1034                           ;	LVP = OFF, Single-Supply ICSP disabled
  1035                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1036                           ;	ICPRT = OFF, ICPORT disabled
  1037                           ;	Extended Instruction Set Enable bit
  1038                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1039                           ;	Background Debugger Enable bit
  1040                           ;	DEBUG = 0x1, unprogrammed default
  1041   300006                     	org	3145734
  1042   300006  81                 	db	129
  1043                           
  1044                           ; Padding undefined space
  1045   300007                     	org	3145735
  1046   300007  FF                 	db	255
  1047                           
  1048                           ;Config register CONFIG5L @ 0x300008
  1049                           ;	Code Protection bit
  1050                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1051                           ;	Code Protection bit
  1052                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1053                           ;	Code Protection bit
  1054                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1055                           ;	Code Protection bit
  1056                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1057   300008                     	org	3145736
  1058   300008  0F                 	db	15
  1059                           
  1060                           ;Config register CONFIG5H @ 0x300009
  1061                           ;	Boot Block Code Protection bit
  1062                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1063                           ;	Data EEPROM Code Protection bit
  1064                           ;	CPD = OFF, Data EEPROM is not code-protected
  1065   300009                     	org	3145737
  1066   300009  C0                 	db	192
  1067                           
  1068                           ;Config register CONFIG6L @ 0x30000A
  1069                           ;	Write Protection bit
  1070                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1071                           ;	Write Protection bit
  1072                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1073                           ;	Write Protection bit
  1074                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1075                           ;	Write Protection bit
  1076                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1077   30000A                     	org	3145738
  1078   30000A  0F                 	db	15
  1079                           
  1080                           ;Config register CONFIG6H @ 0x30000B
  1081                           ;	Configuration Register Write Protection bit
  1082                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1083                           ;	Boot Block Write Protection bit
  1084                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1085                           ;	Data EEPROM Write Protection bit
  1086                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1087   30000B                     	org	3145739
  1088   30000B  E0                 	db	224
  1089                           
  1090                           ;Config register CONFIG7L @ 0x30000C
  1091                           ;	Table Read Protection bit
  1092                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1093                           ;	Table Read Protection bit
  1094                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1095                           ;	Table Read Protection bit
  1096                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1097                           ;	Table Read Protection bit
  1098                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1099   30000C                     	org	3145740
  1100   30000C  0F                 	db	15
  1101                           
  1102                           ;Config register CONFIG7H @ 0x30000D
  1103                           ;	Boot Block Table Read Protection bit
  1104                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1105   30000D                     	org	3145741
  1106   30000D  40                 	db	64
  1107                           tosu	equ	0xFFF
  1108                           tosh	equ	0xFFE
  1109                           tosl	equ	0xFFD
  1110                           stkptr	equ	0xFFC
  1111                           pclatu	equ	0xFFB
  1112                           pclath	equ	0xFFA
  1113                           pcl	equ	0xFF9
  1114                           tblptru	equ	0xFF8
  1115                           tblptrh	equ	0xFF7
  1116                           tblptrl	equ	0xFF6
  1117                           tablat	equ	0xFF5
  1118                           prodh	equ	0xFF4
  1119                           prodl	equ	0xFF3
  1120                           indf0	equ	0xFEF
  1121                           postinc0	equ	0xFEE
  1122                           postdec0	equ	0xFED
  1123                           preinc0	equ	0xFEC
  1124                           plusw0	equ	0xFEB
  1125                           fsr0h	equ	0xFEA
  1126                           fsr0l	equ	0xFE9
  1127                           wreg	equ	0xFE8
  1128                           indf1	equ	0xFE7
  1129                           postinc1	equ	0xFE6
  1130                           postdec1	equ	0xFE5
  1131                           preinc1	equ	0xFE4
  1132                           plusw1	equ	0xFE3
  1133                           fsr1h	equ	0xFE2
  1134                           fsr1l	equ	0xFE1
  1135                           bsr	equ	0xFE0
  1136                           indf2	equ	0xFDF
  1137                           postinc2	equ	0xFDE
  1138                           postdec2	equ	0xFDD
  1139                           preinc2	equ	0xFDC
  1140                           plusw2	equ	0xFDB
  1141                           fsr2h	equ	0xFDA
  1142                           fsr2l	equ	0xFD9
  1143                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      21
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Show_Digits_Display
    _Show_Digits_Display->___awdiv
    _Decode_Display_AC->_Clear_Port
    _Decode_Display_AC->_Set_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1763
                _Show_Digits_Display
 ---------------------------------------------------------------------------------
 (1) _Show_Digits_Display                                  3     1      2    1763
                                              8 COMRAM     3     1      2
                  _Decode_Display_AC
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Decode_Display_AC                                    3     3      0      45
                                              1 COMRAM     3     3      0
                         _Clear_Port
                           _Set_Port
 ---------------------------------------------------------------------------------
 (3) _Set_Port                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Clear_Port                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Show_Digits_Display
     _Decode_Display_AC
       _Clear_Port
       _Set_Port
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBIGSFRh          6A      0       0      21        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      B      15       1       22.1%
BITBIGSFRllll       2A      0       0      25        0.0%
BITBIGSFRllh         6      0       0      23        0.0%
BITBIGSFRlllh        1      0       0      24        0.0%
BITBIGSFRlh          1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      15       3        0.0%
DATA                 0      0      15       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Jan 15 14:07:38 2023

                          _a 0014                           l41 7C58                           l44 7C62  
                         l62 7FFE                           l59 7EF4                 ___awdiv@sign 0006  
                        l309 7D50                          l296 7E14                          l740 7C5C  
                        l900 7DAC                          l750 7E40                          l742 7E18  
                        l910 7DE6                          l902 7DB4                          l760 7E72  
                        l752 7E4A                          l744 7E22                          l920 7E0C  
                        l912 7DE8                          l904 7DC2                          l738 7C54  
                        l762 7E7C                          l754 7E54                          l746 7E2C  
                        l914 7DEE                          l906 7DC8                          l930 7CBC  
                        l756 7E5E                          l748 7E36                          l908 7DDE  
                        l916 7DF4                          l940 7CF0                          l932 7CC0  
                        l924 7CA2                          l758 7E68                          l766 7E86  
                        l918 7E04                          l950 7D2A                          l942 7CF8  
                        l934 7CCE                          l926 7CA6                          l880 7D52  
                        l944 7D06                          l952 7D30                          l936 7CD6  
                        l928 7CB4                          l960 7EF6                          l890 7D7E  
                        l882 7D56                          l954 7D40                          l946 7D1C  
                        l938 7CE8                          l970 7FCE                          l962 7FA4  
                        l892 7D86                          l884 7D64                          l956 7D48  
                        l948 7D24                          l972 7FD4                          l964 7FA8  
                        l980 7C64                          l894 7D8A                          l886 7D6C  
                        l974 7FD8                          l966 7FB6                          l982 7C6C  
                        l896 7D92                          l888 7D70                          l976 7FE6  
                        l968 7FBC                          l898 7DA4                          l978 7FF0  
                        l988 7E9E                          u200 7CCE                          u201 7CCA  
                        u130 7D64                          u210 7CE8                          u131 7D60  
                        u211 7CE4                          u140 7D7E                          u220 7D06  
                        u141 7D7A                          u221 7D02                          u150 7DA4  
                        u230 7D1C                          u151 7DA0                          u231 7D18  
                        u160 7DC2                          u240 7D40                          u161 7DBE  
                        u241 7D3C                          u170 7DDE                          u171 7DDA  
                        u180 7E04                          u181 7E00                          u190 7CB4  
                        u191 7CB0                          u257 7FAE                          u267 7FC6  
                        u277 7FDE                          u287 7FF6                 ___awmod@sign 0006  
                        wreg 000FE8                         _LATB 000F8A                         _LATD 000F8C  
                       _Tens 0010                         _main 7C64                   _Clear_Port 7C5A  
                       start 0000                 ___param_bank 000000                        ?_main 0001  
            __end_of___awdiv 7E16              __end_of___awmod 7D52              ___awdiv@divisor 0003  
            ___awdiv@counter 0005                        _TRISB 000F93                        _TRISD 000F95  
                      _Units 0012                        tablat 000FF5                        status 000FD8  
            __initialization 7C80                 __end_of_main 7C80                       ??_main 000C  
              __activetblptr 000002             __end_of_Set_Port 7C5A             ___awdiv@dividend 0001  
                ?_Clear_Port 0001                    ??___awdiv 0005                    ??___awmod 0005  
           ___awdiv@quotient 0007              ___awmod@divisor 0003                Set_Port@value 0001  
                     isa$std 000001              ___awmod@counter 0005                 __pdataCOMRAM 0014  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
                 __accesstop 0060      __end_of__initialization 7C98          _Show_Digits_Display 7EF6  
              ___rparam_used 000001               __pcstackCOMRAM 0001         ?_Show_Digits_Display 0009  
                 __pnvCOMRAM 000C                    ?_Set_Port 0001        ??_Show_Digits_Display 000B  
          _Decode_Display_AC 7E16           ?_Decode_Display_AC 0001          ??_Decode_Display_AC 0002  
                    _Hundred 000E                   ??_Set_Port 0001                      __Hparam 0000  
                    __Lparam 0000                      ___awdiv 7D52                      ___awmod 7CA2  
  __end_of_Decode_Display_AC 7EF6                      __pcinit 7C80                      __ramtop 0800  
                    __ptext0 7C64                      __ptext1 7EF6                      __ptext2 7CA2  
                    __ptext3 7D52                      __ptext4 7E16                      __ptext5 7C52  
                    __ptext6 7C5A             ___awmod@dividend 0001         end_of_initialization 7C98  
              __Lmediumconst 0000                 ??_Clear_Port 0001           __end_of_Clear_Port 7C64  
              __pidataCOMRAM 7C50     Show_Digits_Display@value 0009          start_initialization 7C80  
                  _Thousands 000C  __end_of_Show_Digits_Display 8000                     ?___awdiv 0001  
                   ?___awmod 0001                     __Hrparam 0000                     _Set_Port 7C52  
                   __Lrparam 0000              Clear_Port@value 0001                     isa$xinst 000000  
     Decode_Display_AC@value 0004  
